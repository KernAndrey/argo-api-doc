---
swagger: "2.0"
info:
  description: "This is API documantation for mobile app developer for ARGO project"
  version: "1.0.0"
  title: "Swagger Argo Mobile"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "kernandrey1@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: ""
basePath: "/v2"
tags:
  - name: "Tasks"
    description: "Endpoints for project tasks"
  - name: "Services"
    description: "Endpoints for task services (jobs)"
  - name: "Customers"
    description: "Endpoints for customers"
  - name: "Notes"
    description: "Access to Petstore orders"
  - name: "Attachments"
    description: "Endpoints for task attachments"
  - name: "Sale Orders"
    description: "Endpoints for sale orders"
  - name: "SMS"
    description: "Endpoints for sending SMS"
schemes:
  - "https"
  - "http"

paths:
  /api/v1/tasks/:
    get:
      tags:
        - "Tasks"
      summary: "Returns all active tasks  where user is estimator or technician"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/TaskShort"
        401:
          description: "Unauthorized. Token is invalid or expired."
      security:
        - api_key: [ ]

  /api/v1/tasks/<int:task_id>:
    get:
      tags:
        - "Tasks"
      summary: "Returns task details by ID where user is estimator or technician"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: task_id
          in: path
          required: true
          type: integer
          description: "ID of the task to return"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/TaskDetails"
        401:
          description: "Unauthorized. Token is invalid or expired."
        403:
          description: "Forbidden. User is not assigned to this task."
        404:
          description: "Task not found"
      security:
        - api_key: [ ]

  /api/v1/task/<int:task_id>/set-mechanism-status:
    put:
      tags:
        - "Tasks"
      summary: 'Set mechanism status for the task'
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: "Mechanism status object that needs to be added"
          required: true
          schema:
            type: object
            properties:
              mechanism_part_status:
                type: string
                required: true
                description: "Status of the mechanism. Allowed values are: n/a, to_order, ordered, ready_to_pick_up_from_manufacturer, picked_up_from_manufacturer, delivered_to_destination_warehouse"
                example: "delivered_to_destination_warehouse"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                type: string
                example: "Mechanism part status updated successfully."
        400:
          description: 'Bad request. Invalid input.'
        401:
          description: "Unauthorized. Token is invalid or expired."
        403:
          description: "Forbidden. User is not assigned to this task."
        404:
          description: "Task not found"


  /api/v1/tasks/<int:task_id>/services:
    get:
      tags:
        - "Tasks"
        - "Services"
      summary: "Returns all services for the task"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: task_id
          in: path
          required: true
          type: integer
          description: "ID of the task for which services to return"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/ServiceDetails"
        401:
          description: "Unauthorized. Token is invalid or expired."
        403:
          description: "Forbidden. User is not assigned to this task."
        404:
          description: "Task not found"
      security:
        - api_key: [ ]

  /api/v1/task/<int:task_id>/service:
    post:
      tags:
        - "Tasks"
        - "Services"
      summary: "Create a service for the task"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: task_id
          in: path
          required: true
          type: integer
          description: "ID of the task to which the service belongs"
        - in: body
          name: body
          description: "Service object that needs to be added"
          required: true
          schema:
            $ref: "#/definitions/ServicePost"
      responses:
        201:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/ServiceDetails"
        400:
          description: "Bad request. Invalid input."
        401:
          description: "Unauthorized. Token is invalid or expired."
        403:
          description: "Forbidden. User is not assigned to this task."
        404:
          description: "Task not found"
      security:
        - api_key: [ ]

  /api/v1/customer/<int:customer_id>:
    get:
      tags:
        - "Customers"
      summary: "Returns customer details by ID"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: customer_id
          in: path
          required: true
          type: integer
          description: "ID of the customer to return"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/CustomerDetails"
        401:
          description: "Unauthorized. Token is invalid or expired."
        404:
          description: "Customer not found"
      security:
        - api_key: [ ]
    put:
      tags:
        - "Customers"
      summary: "Update customer details by ID"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: customer_id
          in: path
          required: true
          type: integer
          description: "ID of the customer to update"
        - in: body
          name: body
          description: "Customer object that needs to be updated. All fields are optional, but at least one field must be provided."
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: "Brandon Freeman"
              phone:
                type: string
                example: "+1-202-555-0173"
              mobile:
                type: string
                example: "+1-202-555-0173"
              email:
                type: string
                example: "name@domain.com"
              street:
                type: string
                example: "4557 De Silva St"
              street2:
                type: string
                example: "Apt 123"
              city:
                type: string
                example: "Fremont"
              zip:
                type: string
                example: "94538"
              state_id:
                type: integer
                example: 1
              country_id:
                type: integer
                example: 1
      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                type: string
                example: "Customer updated successfully."
        401:
          description: "Unauthorized. Token is invalid or expired."
        404:
          description: "Customer not found"
      security:
        - api_key: [ ]

  /api/v1/countries/:
    get:
      tags:
        - "Customers"
      summary: "Returns all countries"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 233
                    code:
                      type: string
                      example: "US"
                    name:
                      type: string
                      example: "United States"
        401:
          description: "Unauthorized. Token is invalid or expired."
      security:
        - api_key: [ ]

  /api/v1/states/<int:country_id>:
    get:
      tags:
        - "Customers"
      summary: "Returns all states for the given country"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: country_id
          in: path
          required: true
          type: integer
          description: "ID of the country for which to return states"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    code:
                      type: string
                      example: "CA"
                    name:
                      type: string
                      example: "California"
        401:
          description: "Unauthorized. Token is invalid or expired."
        404:
          description: "Country not found"
      security:
        - api_key: [ ]

  /api/v1/task/<int:task_id>/notes:
    get:
      tags:
        - "Tasks"
        - "Notes"
      summary: "Returns all notes for the task"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/Note"
        401:
          description: "Unauthorized. Token is invalid or expired."
        403:
          description: "Forbidden. User is not assigned to this task."
        404:
          description: "Task not found"
      security:
        - api_key: [ ]

  /api/v1/task/<int:task_id>/note:
    post:
      tags:
        - "Tasks"
        - "Notes"
      summary: "Create a note for the task"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: "Note object that needs to be added"
          required: true
          schema:
            type: object
            properties:
              note:
                type: string
                required: true
                description: "Text of the note"
                example: "Hello, this is a note."

      responses:
        201:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Note"
        401:
          description: "Unauthorized. Token is invalid or expired."
      security:
        - api_key: [ ]

  /api/v1/tasks/note/<int:note_id>/:
    put:
      tags:
        - "Notes"
      summary: "Update a note"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: note_id
          in: path
          required: true
          type: integer
          description: "ID of the note to update"
        - in: body
          name: body
          description: "Note object that needs to be updated"
          required: true
          schema:
            type: object
            properties:
              note:
                type: string
                required: true
                description: "Text of the note"
                example: "Hello, this is an updated note."
      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Note"
        401:
          description: "Unauthorized. Token is invalid or expired."
        404:
          description: "Note not found"
      security:
        - api_key: [ ]

  /api/v1/attachment/<int:attachment_id>:
    get:
      tags:
        - "Attachments"
      summary: "Returns attachment by ID in base64 format"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: attachment_id
          in: path
          required: true
          type: integer
          description: "ID of the attachment to return"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/AttachmentBase64"
        401:
          description: "Unauthorized. Token is invalid or expired."
        404:
          description: "Attachment not found"
      security:
        - api_key: [ ]

  /api/v1/service/<int:service_id>/attachment/:
    post:
      tags:
        - "Attachments"
      summary: "Upload an attachment for the service and create a copy to the task"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: service_id
          in: path
          required: true
          type: integer
          description: "ID of the service to which the attachment belongs"
        - in: body
          name: body
          description: "Attachment object that needs to be added"
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: "document.pdf"
              data_base64:
                type: string
                example: "JVBERi0xLjQKJeLjz9MKNCAwIG9iago8PC9UeXBlL1hSZW5kZXIvUGFnZXMvUGFnZVsvNjYv..."
      responses:
        201:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Attachment"
        400:
          description: "Bad request. Invalid input."
        401:
          description: "Unauthorized. Token is invalid or expired."
        403:
          description: "Forbidden. User is not assigned to this service."
        404:
          description: "Service not found"
      security:
        - api_key: [ ]

  /api/v1/task/<int:service_id>/attachment/:
    post:
      tags:
        - "Attachments"
        - "Tasks"
      summary: "Upload an attachment for the task"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: task_id
          in: path
          required: true
          type: integer
          description: "ID of the task to which the attachment belongs"
        - in: body
          name: body
          description: "Attachment object that needs to be added"
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: "document.pdf"
              data_base64:
                type: string
                example: "JVBERi0xLjQKJeLjz9MKNCAwIG9iago8PC9UeXBlL1hSZW5kZXIvUGFnZXMvUGFnZVsvNjYv..."
      responses:
        201:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Attachment"
        400:
          description: "Bad request. Invalid input."
        401:
          description: "Unauthorized. Token is invalid or expired."
        403:
          description: "Forbidden. User is not assigned to this task."
        404:
          description: "Service not found"
      security:
        - api_key: [ ]

  /api/v1/customer/<int:customer_id>/attachment/:
    post:
      tags:
        - "Attachments"
        - "Customers"
      summary: "Upload an attachment for the customer"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: task_id
          in: path
          required: true
          type: integer
          description: "ID of the task to which the attachment belongs"
        - in: body
          name: body
          description: "Attachment object that needs to be added"
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: "document.pdf"
              data_base64:
                type: string
                example: "JVBERi0xLjQKJeLjz9MKNCAwIG9iago8PC9UeXBlL1hSZW5kZXIvUGFnZXMvUGFnZVsvNjYv..."
      responses:
        201:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Attachment"
        400:
          description: "Bad request. Invalid input."
        401:
          description: "Unauthorized. Token is invalid or expired."
        404:
          description: "Service not found"
      security:
        - api_key: [ ]

  /api/v1/task/<int:task_id>/sale_orders/:
    get:
      tags:
        - "Tasks"
        - "Services"
        - "Sale Orders"
      summary: "Returns all sale orders for the task"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: task_id
          in: path
          required: true
          type: integer
          description: "ID of the task for which sale orders to return"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/SaleOrder"
        401:
          description: "Unauthorized. Token is invalid or expired."
        403:
          description: "Forbidden. User is not assigned to this task."
        404:
          description: "Task not found"
      security:
        - api_key: [ ]

  /api/v1/estimate_job_rooms:
    get:
      tags:
        - "Services"
      summary: "Returns all estimate job rooms"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/EstimateJobRoom"
        401:
          description: "Unauthorized. Token is invalid or expired."
      security:
        - api_key: [ ]

  /api/v1/products/:
    get:
      tags:
        - "Services"
      summary: "Returns all products in category 'All / Services' and subcategories"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/Product"
        401:
          description: "Unauthorized. Token is invalid or expired."
      security:
        - api_key: [ ]

  /api/v1/sale_order/<int:sale_order_id>/portal_url/:
    get:
      tags:
        - "Services"
        - "Sale Orders"
      summary: "Returns portal URL for the sale order by ID. Customer can use it to sign, pay, and download the sale order."
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: sale_order_id
          in: path
          required: true
          type: integer
          description: "ID of the sale order to return portal URL for"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              data:
                type: string
                example: "https://example.com/my/orders/38?access_token=3acfce93-03dc-4945-9d2f-83dc607dfeb0"
        401:
          description: "Unauthorized. Token is invalid or expired."
        404:
          description: "Sale order not found"
      security:
        - api_key: [ ]

  /api/v1/customer/<int:customer_id>/send_sms/:
    post:
      tags:
        - "Customers"
        - "SMS"
      summary: "Send SMS to the customer"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: customer_id
          in: path
          required: true
          type: integer
          description: "ID of the customer to send SMS to"
        - in: body
          name: body
          description: "SMS object that needs to be sent"
          required: true
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Hello, this is a test message."
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SMSDetails"
        400:
          description: "Bad request. Invalid input."
        401:
          description: "Unauthorized. Token is invalid or expired."
        404:
          description: "Customer not found"
      security:
        - api_key: []

  /api/v1/task/<int:task_id>/send_on_my_way_sms/:
    post:
      tags:
        - "Tasks"
        - "SMS"
      summary: "Send SMS to the customer. Uses 'On My Way' template."
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: task_id
          in: path
          required: true
          type: integer
          description: "ID of the task to send SMS for"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SMSDetails"
        400:
          description: "Bad request. Invalid input."
        401:
          description: "Unauthorized. Token is invalid or expired."
        404:
          description: "Task not found"

  /api/v1/sms/<int:sms_id>/:
    get:
      tags:
        - "SMS"
      summary: "Get SMS details (with status) by ID."
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: sms_id
          in: path
          required: true
          type: integer
          description: "ID of the SMS to return"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SMSDetails"
        401:
          description: "Unauthorized. Token is invalid or expired."
        404:
          description: "SMS not found"

securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"

definitions:
  TaskShort:
    type: object
    properties:
      id:
        type: integer
        example: 62
      name:
        type: string
        example: "Boiler maintenance"
      reference_number:
        type: string
        example: 'T-1'
      client:
        type: string
        example: "Colleen Diaz"
      status:
        type: string
        example: "01_in_progress"
      estimator:
        type: string
        example: "Amy Watson"
      technician:
        type: string
        example: "Amy Watson"

  TaskDetails:
    type: object
    properties:
      id:
        type: integer
        example: 121
      name:
        type: string
        example: "Azure Interior, Brandon Freeman task"
      reference_number:
        type: string
        example: "T-4"
      customer:
        type: object
        properties:
          id:
            type: integer
            example: 27
          name:
            type: string
            example: "Brandon Freeman"
          address:
            type: string
            example: "4557 De Silva St, 94538 Fremont, California, United States"
          phone:
            type: string
            example: "N/A"
      status:
        type: string
        example: "New"
      assignees:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              example: 2
            name:
              type: string
              example: "Mitchell Admin"
      estimators:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              example: 6
            name:
              type: string
              example: "Abigail Peterson"
      technicians:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              example: 14
            name:
              type: string
              example: "Anita Oliver"
      description:
        type: string
        example: "<p data-oe-version=\"1.0\" data-last-history-steps=\"2960336533123470\">asdasdasd</p>"
      tags:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              example: 3
            name:
              type: string
              example: "Experiment"
      attachments:
        type: array
        items:
          $ref: "#/definitions/Attachment"
      parts_statuses:
        type: object
        properties:
          glass:
            type: string
            example: "n/a"
          mechanism:
            type: string
            example: "delivered_to_destination_warehouse"
          fwr:
            type: string
            example: "ordered"
          storm:
            type: string
            example: "ready_to_pick_up_from_manufacturer"
          woodwork:
            type: string
            example: "picked_up_from_manufacturer"

  CustomerDetails:
    type: object
    properties:
      id:
        type: integer
        example: 27
      name:
        type: string
        example: "Brandon Freeman"
      title:
        type: string
        example: "Mister"
      address:
        type: string
        example: "4557 De Silva St, 94538 Fremont, California, United States"
      phone:
        type: string
        example: null
      mobile:
        type: string
        example: null
      email:
        type: string
        example: "brandon.freeman55@example.com"
      tags:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              example: 7
            name:
              type: string
              example: "Desk Manufacturers"
      previous_tasks:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              example: 77
            name:
              type: string
              example: "Find and fix leak"
            reference_number:
              type: string
              example: "T-1"
            status:
              type: string
              example: "01_in_progress"
            create_date:
              type: string
              format: date-time
              example: "2025-03-07 09:28:22"
      notes:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              example: 1167
            message_type:
              type: string
              example: "comment"
            body:
              type: string
              example: "<p>123</p>"
            author_name:
              type: string
              example: "Mitchell Admin"
            create_date:
              type: string
              format: date-time
              example: "2025-03-18 09:36:44"
            write_date:
              type: string
              format: date-time
              example: "2025-03-18 09:36:44"
      attachments:
        type: array
        items:
          $ref: "#/definitions/Attachment"
      create_date:
        type: string
        format: date-time
        example: "2025-03-07 09:20:55"
      write_date:
        type: string
        format: date-time
        example: "2025-03-18 09:53:09"

  Attachment:
    type: object
    properties:
      id:
        type: integer
        example: 1336
      name:
        type: string
        example: "document.pdf"
      mimetype:
        type: string
        example: "application/pdf"
      size:
        type: integer
        example: 116755
      create_date:
        type: string
        format: date-time
        example: "2025-03-18 09:53:17"
      write_date:
        type: string
        format: date-time
        example: "2025-03-18 09:53:17"

  AttachmentBase64:
    type: object
    properties:
      id:
        type: integer
        example: 1336
      name:
        type: string
        example: "document.pdf"
      mimetype:
        type: string
        example: "application/pdf"
      size:
        type: integer
        example: 116755
      data_base64:
        type: string
        example: "JVBERi0xLjQKJeLjz9MKNCAwIG9iago8PC9UeXBlL1hSZW5kZXIvUGFnZXMvUGFnZVsvNjYv..."
      create_date:
        type: string
        format: date-time
        example: "2025-03-18 09:53:17"
      write_date:
        type: string
        format: date-time
        example: "2025-03-18 09:53:17"

  Note:
    type: object
    properties:
      id:
        type: integer
        example: 23
      note:
        type: string
        example: "yet meadow concerned quicker procurement indeed tensely gymnast gah"
      employee:
        type: string
        example: "Amy Watson"

      attachment_ids:
        type: array
        items:
          $ref: "#/definitions/Attachment"
      created_by_app:
        type: boolean
        example: true
      create_date:
        type: string
        format: date-time
        example: "2025-02-10 09:30:26"

  ServiceDetails:
    type: object
    properties:
      id:
        type: integer
        example: 8
      name:
        type: string
        example: "New Task - Glass - S00037"
      product:
        $ref: "#/definitions/Product"
      sale_order:
        "$ref": "#/definitions/SaleOrder"
      description:
        type: string
        example: "DescriptionDescriptionDescriptionDescription"
      estimators:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              example: 6
            name:
              type: string
              example: "Abigail Peterson"
      technicians:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              example: 14
            name:
              type: string
              example: "Anita Oliver"
      price:
        type: number
        example: 0
      discount_percent:
        type: number
        example: 0
      discount_amount:
        type: number
        example: 0
      discount_amount_actual:
        type: number
        example: 0
      price_with_discount:
        type: number
        example: 0
      wrong_measurements:
        type: boolean
        example: false
      estimate_job_rooms:
        type: array
        items:
          $ref: "#/definitions/EstimateJobRoom"
      calculator_type:
        type: string
        example: "other"
      window_type:
        type: boolean
        example: false
      door_type:
        type: boolean
        example: false
      standard_window_dimensions:
        type: string
        example: "custom"
      standard_door_dimensions:
        type: boolean
        example: false
      custom_width:
        type: number
        example: 0
      custom_width_fraction:
        type: boolean
        example: false
      custom_height:
        type: number
        example: 0
      custom_height_fraction:
        type: boolean
        example: false
      need_to_remeasure:
        type: boolean
        example: false
      door_frame_color:
        type: string
        example: 'white_interior_white_exterior'
      window_frame_color:
        type: string
        example: 'almond_interior_almond_exterior_extruded'
      glass_options:
        type: string
        example: "clear"
      obscure_glass:
        type: boolean
        example: false
      neat:
        type: boolean
        example: false
      triple_pane_glass:
        type: boolean
        example: false
      tempered:
        type: boolean
        example: false
      glass_upcharge:
        type: boolean
        example: false
      grids_type:
        type: string
        example: "no_grids"
      flat_and_contour_grids_color:
        type: string
        example: "no_grids_color"
      upgrade_handle:
        type: boolean
        example: false
      blinds:
        type: string
        example: 'no_blinds'
      reinforced_meeting_rail:
        type: string
        example: '5'
      foam_insulation_frame_sash:
        type: boolean
        example: false
      energy_star:
        type: boolean
        example: false
      escape_window:
        type: boolean
        example: false
      brick_molding:
        type: boolean
        example: false
      window_trims:
        type: boolean
        example: false
      window_trims_price:
        type: number
        example: 0
      window_capping:
        type: boolean
        example: false
      window_capping_price:
        type: number
        example: 0
      other_arch_elements:
        type: boolean
        example: false
      other_arch_elements_price:
        type: number
        example: 0

  ServicePost:
    type: object
    properties:
      product_id:
        type: integer
        example: 7
      sale_order_id:
        type: integer
        example: 37
      description:
        type: string
        example: "DescriptionDescriptionDescriptionDescription"
      role:
        type: string
        example: "Either 'technician' or 'estimator'"
      price:
        type: number
        example: 0
      discount_percent:
        type: number
        example: 0
      discount_amount:
        type: number
        example: 0
      wrong_measurements:
        type: boolean
        example: false
      estimate_job_room_ids:
        type: array
        items:
          type: integer
          example: [ 1, 2, 3 ]
      window_type:
        type: boolean
        example: false
      door_type:
        type: boolean
        example: false
      standard_window_dimensions:
        type: string
        example: "custom"
      standard_door_dimensions:
        type: boolean
        example: false
      custom_width_fraction:
        type: string
        example: '1-1/2, 1 1/2'
      custom_height_fraction:
        type: string
        example: '1-1/2, 1 1/2'
      need_to_remeasure:
        type: boolean
        example: false
      door_frame_color:
        type: string
        example: 'white_interior_white_exterior'
      window_frame_color:
        type: string
        example: 'almond_interior_almond_exterior_extruded'
      glass_options:
        type: string
        example: "clear"
      obscure_glass:
        type: boolean
        example: false
      neat:
        type: boolean
        example: false
      triple_pane_glass:
        type: boolean
        example: false
      tempered:
        type: boolean
        example: false
      glass_upcharge:
        type: boolean
        example: false
      grids_type:
        type: string
        example: "no_grids"
      flat_and_contour_grids_color:
        type: string
        example: "no_grids_color"
      upgrade_handle:
        type: boolean
        example: false
      blinds:
        type: string
        example: no_blinds
      reinforced_meeting_rail:
        type: string
        example: '5'
      foam_insulation_frame_sash:
        type: boolean
        example: false
      energy_star:
        type: boolean
        example: false
      escape_window:
        type: boolean
        example: false
      brick_molding:
        type: boolean
        example: false
      window_trims:
        type: boolean
        example: false
      window_capping:
        type: boolean
        example: false
      other_arch_elements:
        type: boolean
        example: false
      other_arch_elements_price:
        type: number
        example: 0

  SaleOrder:
    type: object
    properties:
      id:
        type: integer
        example: 37
      name:
        type: string
        example: "S00037"
      status:
        type: string
        example: 'draft'
      create_date:
        type: string
        format: date-time
        example: "2025-03-07 09:20:55"
      write_date:
        type: string
        format: date-time
        example: "2025-03-18 09:53:09"

  EstimateJobRoom:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: "Kitchen"

  Product:
    type: object
    properties:
      id:
        type: integer
        example: 70
      name:
        type: string
        example: "Glass"
      type:
        type: string
        example: "consu"
      description:
        type: boolean
        example: false
      category:
        type: object
        properties:
          id:
            type: integer
            example: 15
          name:
            type: string
            example: "All / Services"

  SMSDetails:
    type: object
    properties:
      id:
        type: integer
        example: 1
      customer_id:
        type: integer
        example: 27
      sender_number:
        type: string
        example: "+1-202-555-0173"
      receiving_number:
        type: string
        example: "+1-202-555-0173"
      message:
        type: string
        example: "Hello, this is a test message."
      status:
        type: string
        example: "delivered"
      create_date:
        type: string
        format: date-time
        example: "2025-03-18 09:53:09"
      write_date:
        type: string
        format: date-time
        example: "2025-03-18 09:53:09"